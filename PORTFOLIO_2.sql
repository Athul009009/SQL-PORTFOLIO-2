-- SENIER MOST EMPLOYEE 

SELECT * FROM EMPLOYEE
SELECT FIRST_NAME,LAST_NAME FROM EMPLOYEE ORDER BY LEVELS DESC LIMIT 1;




-- COUNTRYS WHICH HAVE THE MOST INVOICES 

SELECT * FROM INVOICE

SELECT COUNT(INVOICE_ID), BILLING_COUNTRY 
FROM INVOICE 
GROUP BY BILLING_COUNTRY 
ORDER BY COUNT(INVOICE_ID) DESC LIMIT 1



-- TOP INVOICE 5 COUNTRYS

SELECT COUNT(*), BILLING_COUNTRY 
FROM INVOICE 
GROUP BY BILLING_COUNTRY 
ORDER BY COUNT(*) DESC LIMIT 5



-- WHICH CITY HAS THE BEST CUSTOMERS [CITY THAT HAS THE MOST TOTEL INVOICES]

SELECT SUM(TOTAL),BILLING_CITY
FROM INVOICE
GROUP BY BILLING_CITY 
ORDER BY SUM(TOTAL) DESC
LIMIT 5



-- THE BEST CUSTOMER (PERSON WHO SPEND THE MOST MONEY)
SELECT * FROM CUSTOMER

SELECT CUSTOMER.FIRST_NAME , CUSTOMER.LAST_NAME,SUM(INVOICE.TOTAL) AS TOTAL
FROM CUSTOMER JOIN INVOICE ON CUSTOMER.CUSTOMER_ID = INVOICE.CUSTOMER_ID
GROUP BY CUSTOMER.CUSTOMER_ID
ORDER BY TOTAL DESC 
LIMIT 1





---------------------------------SECTION-2-----------------------------------------------



-- RETURN EMAIL , NAME AND GENRE OF ALL ROCK MUSIC LISTENERS MAKE THE LIST ALPHABETICALLY 


SELECT DISTINCT FIRST_NAME,LAST_NAME,EMAIL
FROM CUSTOMER 
JOIN INVOICE ON CUSTOMER.CUSTOMER_ID = INVOICE.CUSTOMER_ID
JOIN INVOICE_LINE ON INVOICE.INVOICE_ID = INVOICE_LINE.INVOICE_ID
WHERE TRACK_ID IN
	(SELECT TRACK_ID 
	FROM TRACK 
	JOIN GENRE ON TRACK.GENRE_ID = GENRE.GENRE_ID
	WHERE GENRE.NAME LIKE 'Rock')
ORDER BY EMAIL ;




-- TOP 10 BANDS AND THE NO OF SONGS THEY WROTE OF Rock CATAGORY

SELECT ARTIST.ARTIST_ID,ARTIST.NAME,COUNT(ARTIST.ARTIST_ID) AS SONGS
FROM TRACK
JOIN ALBUM ON ALBUM.ALBUM_ID  = TRACK.ALBUM_ID
JOIN GENRE ON GENRE.GENRE_ID= TRACK.GENRE_ID
JOIN ARTIST ON ALBUM.ARTIST_ID = ARTIST.ARTIST_ID
WHERE GENRE.NAME LIKE 'Rock'
GROUP BY ARTIST.ARTIST_ID
ORDER BY SONGS DESC
LIMIT 10



--SELECT SONGS THAT ARE LONGER THEN THE AVERAGE LENGTH (IN MILLISECONDS)

SELECT TRACK_ID , TRACK.NAME , MILLISECONDS 
FROM TRACK 
WHERE MILLISECONDS > (SELECT AVG(MILLISECONDS) FROM TRACK )
ORDER BY MILLISECONDS DESC;




-------------------------------------------------------------------------------------------



-- RETURN  CUSTOMER NAME ,  ARTIST NAME  , TOTAL MONEY SPENT ON  ARTIST

WITH BEST_SELLER AS (
SELECT ARTIST.ARTIST_ID , ARTIST.NAME AS NAME_,
SUM(INVOICE_LINE.UNIT_PRICE * INVOICE_LINE.QUANTITY) AS PRICE
FROM INVOICE_LINE
JOIN  TRACK ON TRACK.TRACK_ID = INVOICE_LINE.TRACK_ID
JOIN ALBUM ON ALBUM.ALBUM_ID  = TRACK.ALBUM_ID
JOIN ARTIST ON ALBUM.ARTIST_ID = ARTIST.ARTIST_ID
GROUP BY 1
ORDER BY PRICE DESC
LIMIT 1
)
SELECT CUSTOMER.CUSTOMER_ID,CUSTOMER.FIRST_NAME,CUSTOMER.LAST_NAME,
BS.NAME_,
SUM(INVOICE_LINE.UNIT_PRICE * INVOICE_LINE.QUANTITY) AS PRICE
FROM CUSTOMER 
JOIN INVOICE ON CUSTOMER.CUSTOMER_ID=INVOICE.CUSTOMER_ID
JOIN INVOICE_LINE ON INVOICE_LINE.INVOICE_ID = INVOICE.INVOICE_ID
JOIN  TRACK ON TRACK.TRACK_ID = INVOICE_LINE.TRACK_ID
JOIN ALBUM ON ALBUM.ALBUM_ID  = TRACK.ALBUM_ID
JOIN ARTIST ON ALBUM.ARTIST_ID = ARTIST.ARTIST_ID
JOIN BEST_SELLER BS ON BS.ARTIST_ID = ARTIST.ARTIST_ID
GROUP BY 1,2,3,4
ORDER BY PRICE DESC




-- FIND MOST POPULAR  MUSIC TYPE (GENRE) IN EACH COUNTRY(BASED ON PURCHASES) 
-- FOR COUNTRIES WHERE MAXIMUM PURCHASE IS SHARED THEN RETURN ALL THE GENRES

WITH POPULER_GEN AS (
SELECT COUNT(INVOICE_LINE.QUANTITY) AS QN , CUSTOMER.COUNTRY AS COUNTRY , GENRE.NAME , GENRE.GENRE_ID,
ROW_NUMBER() OVER(PARTITION BY CUSTOMER.COUNTRY ORDER BY COUNT(INVOICE_LINE.QUANTITY) DESC) AS ROW_NO
FROM INVOICE_LINE
JOIN INVOICE ON INVOICE_LINE.INVOICE_ID = INVOICE.INVOICE_ID
JOIN CUSTOMER ON CUSTOMER.CUSTOMER_ID=INVOICE.CUSTOMER_ID
JOIN  TRACK ON TRACK.TRACK_ID = INVOICE_LINE.TRACK_ID
JOIN GENRE ON TRACK.GENRE_ID = GENRE.GENRE_ID
GROUP BY 2,3,4
ORDER BY 2 ASC,1 DESC
)
SELECT * FROM POPULER_GEN WHERE ROW_NO <=1


-- ROW_NUMBER() OVER (ORDER BY Salary DESC) AS RowNumber 
-- HERE THE ROW NUMBER () FUNCTION WILL ASSIGN  A NUMBER SIMILER TO INDEX NUMBER TO A SPECIFIC COLUMN HERE QUANTITY 






-- DETERMINE THE CUSTOMER THAT HAS SPEND MOST ON MUSIC ON EACH COUNTRY  ,
-- FOR THE COUNTRIES WHERE TOP AMOUNT SPEND IS SHARED PROVIDE ALL CUSTOMERS WHO SPEND THIS AMOUNT

WITH CUST AS
(
SELECT CUSTOMER.CUSTOMER_ID , INVOICE.BILLING_COUNTRY ,CUSTOMER.FIRST_NAME,CUSTOMER.LAST_NAME,SUM(INVOICE.TOTAL) AS TOTAL,
ROW_NUMBER () OVER(PARTITION BY INVOICE.BILLING_COUNTRY  ORDER BY SUM(TOTAL)DESC) AS RW
FROM CUSTOMER 
JOIN INVOICE ON CUSTOMER.CUSTOMER_ID = INVOICE.CUSTOMER_ID
GROUP BY 1,2,3,4
ORDER BY 2 ASC , 5 DESC
)
SELECT * FROM CUST WHERE RW <=1



